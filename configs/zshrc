export TERM="xterm-256color"
export ZSH=/home/op/.oh-my-zsh

ZSH_THEME="mrtazz"
plugins=(dircycle github z autojump rails archlinux zsh-autosuggestions last-working-dir zsh-navigation-tools docker vagrant cp ruby)

source $ZSH/oh-my-zsh.sh
source ~/.profile
source $HOME/bin/tmux-splash.sh

function bin2sc {
    # convert .bin to shellcode
    hexdump -v -e '"\\""x" 1/1 "%02x" ""' ${1}
}

function dockershell() {
    docker run --rm -i -t --entrypoint=/bin/bash "$@"
}

function dockershellsh() {
    docker run --rm -i -t --entrypoint=/bin/sh "$@"
}

function dockershellhere() {
    dirname=${PWD##*/}
    docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} "$@"
}

function dockershellshhere() {
    docker run --rm -it --entrypoint=/bin/sh -v `pwd`:/${dirname} -w /${dirname} "$@"
}

function dockerwindowshellhere() {
    dirname=${PWD##*/}
    docker -c 2019-box run --rm -it -v "C:${PWD}:C:/source" -w "C:/source" "$@"
}

function impacket() {
    docker run --rm -it rflathers/impacket "$@"
}

function smbservehere() {
    local sharename
    [[ -z $1 ]] && sharename="SHARE" || sharename=$1
    docker run --rm -it -p 445:445 -v "${PWD}:/tmp/serve" rflathers/impacket smbserver.py -smb2support $sharename /tmp/serve
}

function nginxhere() {
    docker run --rm -it -p 80:80 -p 443:443 -v "${PWD}:/srv/data" rflathers/nginxserve
}

function webdavhere() {
    docker run --rm -it -p 80:80 -v "${PWD}:/srv/data/share" rflathers/webdav
}

function metasploit() {
    docker run --rm -it  --network=host metasploitframework/metasploit-framework ./msfconsole "$@"
}

function msfvenomhere() {
    docker run --rm -it -v "${HOME}/.msf4:/home/msf/.msf4" -v "${PWD}:/data" metasploitframework/metasploit-framework ./msfvenom "$@"
}

function reqdump() {
    docker run --rm -it -p 80:3000 rflathers/reqdump
}

function postfiledumphere() {
    docker run --rm -it -p80:3000 -v "${PWD}:/data" rflathers/postfiledump
}

export EDITOR='vim'
export GOPATH=/home/op/go 
export TERM="xterm-256color"
export HOME=/home/op
export PATH="$PATH:$HOME/.rvm/bin:/home/op/go/bin:/home/op/bin" # Add RVM to PATH for scripting

export BIG="/home/op/lists/seclists/Discovery/Web-Content/big.txt"
export WEB="/home/op/lists/seclists/Discovery/Web-Content/"
export DIRS_LARGE="/home/op/lists/seclists/Discovery/Web-Content/raft-large-directories.txt"
export DIRS_SMALL="/home/op/lists/seclists/Discovery/Web-Content/raft-small-directories.txt"
export FILES_LARGE="/home/op/lists/seclists/Discovery/Web-Content/raft-large-files.txt"
export FILES_SMALL="/home/op/lists/seclists/Discovery/Web-Content/raft-small-files.txt"

# cheat autocompletion; just add to ~/.zshrc
 _cmpl_cheat() {
 reply=($(cheat -l | cut -d' ' -f1))
 }
 compctl -K _cmpl_cheat cheat

#Autocompletion gf tool from tomnomnom
_cmpl_gf() {
	reply=($(ls $GOPATH/src/github.com/tomnomnom/gf/examples | cut -f1 -d"."))
}
compctl -K _cmpl_gf gf

# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.tar.xz)    tar xvf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       rar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.tgz)       tar xvzf $1  ;;
      *.lrz)       lrzuntar $1  ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}


alias ls=" ls --color -sh"
alias wclone="wget -H -p -k"
alias vim="nvim"
alias nmap="grc nmap"

alias zshr="source ~/.zshrc"
alias zshc="vi ~/.zshrc"
alias myip="curl ipinfo.io"
alias diff="diff -y"
alias web="sudo python2 -m SimpleHTTPServer 80"
alias web8000="python -m http.server 8000"
alias smtpserver="python2 -m smtpd -n -c $1 :25"
alias open="xdg-open"
alias vimrc="vi ~/.vimrc"
alias del="rm -rf "
alias size="du -hs "
alias .="cd .."
alias ..="cd ../../"
alias ...="cd ../../../"
alias rm="rm -v"
alias ifconfig+='ip addr | grep UP | cut -f2 -d":"'
alias :q="exit"
alias :x="exit"
alias :q!="exit"
alias gc="git clone"
alias gc+="sudo git clone"
alias ga.="git add ."
alias ga="git add"
alias gcm="git commit -m"
alias gpo="git push origin"
alias gp="git push"
alias gpu="git push upstream"
alias gpul="git pull"
alias lbzip="lbzip2 -v"
alias bunzip="bunzip -v"
alias tmuxks="tmux kill-session -t"
alias gui="xdg-open ."




# added by pipsi (https://github.com/mitsuhiko/pipsi)
export PATH="/home/op/.local/bin:$PATH"
source /home/op/.oh-my-zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

dirs(){
        name=$(echo $1 | unfurl -u domains)
        x=$(date +%Y%m%d%H%M%S)
        mkdir -p ~/work
        mkdir -p ~/work/$name
        ffuf -w $FILES_LARGE -u $1FUZZ -D -e asp,aspx,cgi,cfml,CFM,htm,html,json,jsp,php,phtml,pl,py,sh,shtml,sql,txt,xml,xhtml,tar,tar.gz,tgz,war,zip,swp,src,jar,java,log,bin,js,db -t 150 -o ~/work/$name/$name_$x.json
}

# added by pipsi (https://github.com/mitsuhiko/pipsi)
export PATH="/home/op/.local/bin:$PATH"

axiom-ls() {
    /snap/bin/doctl compute droplet list | awk '{ print $2 " " $3 }' | column -t
}

axiom-implode() {
    /snap/bin/doctl compute droplet delete -f $(/snap/bin/doctl compute droplet list | awk '{ print $2 }' | grep $(hostname))
}
